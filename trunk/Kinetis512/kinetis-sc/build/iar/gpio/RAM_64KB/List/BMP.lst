###############################################################################
#                                                                             #
#                                                       06/Mar/2012  12:46:31 #
# IAR ANSI C/C++ Compiler V6.10.1.22143/W32 EVALUATION for ARM                #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  F:\My Works\K60\Kinetis512\kinetis-sc\src\projects\gpio\ #
#                    BMP.c                                                    #
#    Command line =  "F:\My Works\K60\Kinetis512\kinetis-sc\src\projects\gpio #
#                    \BMP.c" -D IAR -D TWR_K60N512 -lCN "F:\My                #
#                    Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\RAM_64KB\ #
#                    List\" -lB "F:\My Works\K60\Kinetis512\kinetis-sc\build\ #
#                    iar\gpio\RAM_64KB\List\" -o "F:\My                       #
#                    Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\RAM_64KB\ #
#                    Obj\" --no_cse --no_unroll --no_inline --no_code_motion  #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=None            #
#                    --dlib_config "D:\Program Files\IAR Systems\Embedded     #
#                    Workbench 6.0 Evaluation\arm\INC\c\DLib_Config_Normal.h" #
#                     -I "F:\My Works\K60\Kinetis512\kinetis-sc\build\iar\gpi #
#                    o\..\..\..\src\projects\gpio\" -I "F:\My                 #
#                    Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\..\..\..\ #
#                    src\common\" -I "F:\My Works\K60\Kinetis512\kinetis-sc\b #
#                    uild\iar\gpio\..\..\..\src\cpu\" -I "F:\My               #
#                    Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\..\..\..\ #
#                    src\cpu\headers\" -I "F:\My                              #
#                    Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\..\..\..\ #
#                    src\drivers\uart\" -I "F:\My                             #
#                    Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\..\..\..\ #
#                    src\drivers\mcg\" -I "F:\My                              #
#                    Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\..\..\..\ #
#                    src\drivers\wdog\" -I "F:\My                             #
#                    Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\..\..\..\ #
#                    src\platforms\" -I "F:\My Works\K60\Kinetis512\kinetis-s #
#                    c\build\iar\gpio\..\" -Ol --use_c++_inline               #
#    List file    =  F:\My Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\RAM #
#                    _64KB\List\BMP.lst                                       #
#    Object file  =  F:\My Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\RAM #
#                    _64KB\Obj\BMP.o                                          #
#                                                                             #
#                                                                             #
###############################################################################

F:\My Works\K60\Kinetis512\kinetis-sc\src\projects\gpio\BMP.c
      1          #include "BMP.h"
      2          #include "FAT32.h"

   \                                 In section .bss, align 4
      3          unsigned char *pBmpBuf;//读入图像数据的指针
   \                     pBmpBuf:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      4          int bmpWidth;//图像的宽
   \                     bmpWidth:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      5          int bmpHeight;//图像的高
   \                     bmpHeight:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      6          int biBitCount;//图像类型，每像素位数
   \                     biBitCount:
   \   00000000                      DS8 4
      7          

   \                                 In section .bss, align 4
      8          BITMAPFILEHEADER fileHead;
   \                     fileHead:
   \   00000000                      DS8 16

   \                                 In section .bss, align 4
      9          BITMAPINFOHEADER head;
   \                     head:
   \   00000000                      DS8 40

   \                                 In section .data, align 4
     10          uint8 create_Time[6]={0x09,0x07,0x0d,0x0d,0x14,0x0f};  //创建时间貌似修改了没有用
   \                     create_Time:
   \   00000000   09070D0D140F       DC8 9, 7, 13, 13, 20, 15, 0, 0
   \              0000        

   \                                 In section .text, align 2, keep-with-next
     11          void InitColorTable(RGBQUAD* colorTable) {
     12            uint16 i;
     13            for (i=0;i<256;i++)
   \                     InitColorTable:
   \   00000000   0021               MOVS     R1,#+0
   \   00000002   10E0               B.N      ??InitColorTable_0
     14          	{
     15          		colorTable[i].rgbBlue=i;
   \                     ??InitColorTable_1:
   \   00000004   89B2               UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000006   00F82110           STRB     R1,[R0, R1, LSL #+2]
     16          		colorTable[i].rgbGreen=i;
   \   0000000A   89B2               UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000000C   10EB8102           ADDS     R2,R0,R1, LSL #+2
   \   00000010   5170               STRB     R1,[R2, #+1]
     17          		colorTable[i].rgbRed=i;
   \   00000012   89B2               UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000014   10EB8102           ADDS     R2,R0,R1, LSL #+2
   \   00000018   9170               STRB     R1,[R2, #+2]
     18          		colorTable[i].rgbReserved=0;
   \   0000001A   89B2               UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000001C   10EB8102           ADDS     R2,R0,R1, LSL #+2
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   D370               STRB     R3,[R2, #+3]
     19          	} 
   \   00000024   491C               ADDS     R1,R1,#+1
   \                     ??InitColorTable_0:
   \   00000026   4FF48072           MOV      R2,#+256
   \   0000002A   89B2               UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000002C   9142               CMP      R1,R2
   \   0000002E   E9D3               BCC.N    ??InitColorTable_1
     20          }
   \   00000030   7047               BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     21          void BmpBIT8Write(/*struct FileInfoStruct* fileInfo,*/uint8* fileName,uint8 xSize,uint8 ySize,uint8* imgBuf,RGBQUAD* colorTable){
   \                     BmpBIT8Write:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   A1B0               SUB      SP,SP,#+132
   \   00000004   0400               MOVS     R4,R0
   \   00000006   0F00               MOVS     R7,R1
   \   00000008   1600               MOVS     R6,R2
   \   0000000A   1D00               MOVS     R5,R3
     22            struct FileInfoStruct fileInfo;
     23            uint8 CreateTime[6]={0x09,0x07,0x0d,0x0d,0x14,0x0f};
   \   0000000C   00A8               ADD      R0,SP,#+0
   \   0000000E   ........           ADR.W    R1,`?<Constant {9, 7, 13, 13, 20, 15}>`
   \   00000012   0CC9               LDM      R1!,{R2,R3}
   \   00000014   0CC0               STM      R0!,{R2,R3}
   \   00000016   0839               SUBS     R1,R1,#+8
   \   00000018   0838               SUBS     R0,R0,#+8
     24            uint8 fhead[]={0x42,0x4D,0xF6,0x16,00,00,00,00,00,0x00, //每行十个数字
     25            0x36,0x04,00,00,0x28,00,00,00,0x50,0x00,
     26            00,00,0x46,00,00,00,0x01,00,0x08,00,
     27            00,00,00,00,0xC0,0x12,00,00,00,00,
     28            00,00,00,00,00,00,00,00,00,00,
     29            00,00,00,00};
   \   0000001A   02A8               ADD      R0,SP,#+8
   \   0000001C   ........           ADR.W    R1,`?<Constant {66, 77, 246, 22, 0, 0, 0, 0, 0, 0,`
   \   00000020   3822               MOVS     R2,#+56
   \   00000022   ........           BL       __aeabi_memcpy4
     30            uint8 fileSize,imgSize;
     31            fileSize=xSize*ySize+54+1024;
   \   00000026   FFB2               UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000028   F6B2               UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002A   06FB07F0           MUL      R0,R6,R7
   \   0000002E   3630               ADDS     R0,R0,#+54
     32            imgSize=xSize*ySize;
   \   00000030   06FB07F1           MUL      R1,R6,R7
     33            fhead[2]=fileSize&0x00FF;
   \   00000034   8DF80A00           STRB     R0,[SP, #+10]
     34            fhead[3]=(fileSize>>2)&0x00FF;
   \   00000038   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   8008               LSRS     R0,R0,#+2
   \   0000003C   8DF80B00           STRB     R0,[SP, #+11]
     35            fhead[18]=xSize;
   \   00000040   8DF81A70           STRB     R7,[SP, #+26]
     36            fhead[22]=ySize;
   \   00000044   8DF81E60           STRB     R6,[SP, #+30]
     37            fhead[34]=imgSize&0x00FF;
   \   00000048   8DF82A10           STRB     R1,[SP, #+42]
     38            fhead[35]=(imgSize>>2)&0x00FF;
   \   0000004C   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004E   8808               LSRS     R0,R1,#+2
   \   00000050   8DF82B00           STRB     R0,[SP, #+43]
     39            FAT32_Create_File(&fileInfo,fileName,CreateTime);
   \   00000054   00AA               ADD      R2,SP,#+0
   \   00000056   2100               MOVS     R1,R4
   \   00000058   10A8               ADD      R0,SP,#+64
   \   0000005A   ........           BL       FAT32_Create_File
     40            FAT32_Add_Dat(&fileInfo,sizeof(fhead),fhead);
   \   0000005E   02AA               ADD      R2,SP,#+8
   \   00000060   3621               MOVS     R1,#+54
   \   00000062   10A8               ADD      R0,SP,#+64
   \   00000064   ........           BL       FAT32_Add_Dat
     41            //FAT32_Add_Dat(&fileInfo,sizeof(colorTable),(uint8*)colorTable);
     42            FAT32_Add_Dat(&fileInfo,sizeof(imgBuf),imgBuf);  
   \   00000068   2A00               MOVS     R2,R5
   \   0000006A   0421               MOVS     R1,#+4
   \   0000006C   10A8               ADD      R0,SP,#+64
   \   0000006E   ........           BL       FAT32_Add_Dat
     43          }
   \   00000072   21B0               ADD      SP,SP,#+132
   \   00000074   F0BD               POP      {R4-R7,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant {9, 7, 13, 13, 20, 15}>`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   09070D0D140F       DC8 9, 7, 13, 13, 20, 15, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant {66, 77, 246, 22, 0, 0, 0, 0, 0, 0,`:
   \   00000000                      ; Initializer data, 56 bytes
   \   00000000   424DF6160000       DC8 66, 77, 246, 22, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   0000000A   360400002800       DC8 54, 4, 0, 0, 40, 0, 0, 0, 80, 0
   \              00005000    
   \   00000014   000046000000       DC8 0, 0, 70, 0, 0, 0, 1, 0, 8, 0
   \              01000800    
   \   0000001E   00000000C012       DC8 0, 0, 0, 0, 192, 18, 0, 0, 0, 0
   \              00000000    
   \   00000028   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   00000032   000000000000       DC8 0, 0, 0, 0, 0, 0

   Maximum stack usage in bytes:

     Function       .cstack
     --------       -------
     BmpBIT8Write      152
     InitColorTable      0


   Section sizes:

     Function/Label                                 Bytes
     --------------                                 -----
     pBmpBuf                                           4
     bmpWidth                                          4
     bmpHeight                                         4
     biBitCount                                        4
     fileHead                                         16
     head                                             40
     create_Time                                       8
     InitColorTable                                   50
     BmpBIT8Write                                    118
     ?<Constant {9, 7, 13, 13, 20, 15}>                8
     ?<Constant {66, 77, 246, 22, 0, 0, 0, 0, 0, 0,   56

 
  72 bytes in section .bss
   8 bytes in section .data
 232 bytes in section .text
 
 232 bytes of CODE memory
  80 bytes of DATA memory

Errors: none
Warnings: 4
