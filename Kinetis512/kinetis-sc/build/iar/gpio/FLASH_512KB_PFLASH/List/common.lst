###############################################################################
#                                                                             #
#                                                       01/Mar/2012  22:04:46 #
# IAR ANSI C/C++ Compiler V6.10.1.22143/W32 EVALUATION for ARM                #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  F:\My Works\K60\K60课件\K60课件\源程序\Ch11-PRG(SDHC)\SD #
#                    HC\Sources\MCUabout\common.c                             #
#    Command line =  "F:\My Works\K60\K60课件\K60课件\源程序\Ch11-PRG(SDHC)\S #
#                    DHC\Sources\MCUabout\common.c" -D IAR -D TWR_K60N512     #
#                    -lCN "F:\My Works\K60\Kinetis512\kinetis-sc\build\iar\gp #
#                    io\FLASH_512KB_PFLASH\List\" -lB "F:\My                  #
#                    Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\FLASH_512 #
#                    KB_PFLASH\List\" -o "F:\My Works\K60\Kinetis512\kinetis- #
#                    sc\build\iar\gpio\FLASH_512KB_PFLASH\Obj\" --no_cse      #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench 6.0                 #
#                    Evaluation\arm\INC\c\DLib_Config_Normal.h" -I "F:\My     #
#                    Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\..\..\..\ #
#                    src\projects\gpio\" -I "F:\My                            #
#                    Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\..\..\..\ #
#                    src\common\" -I "F:\My Works\K60\Kinetis512\kinetis-sc\b #
#                    uild\iar\gpio\..\..\..\src\cpu\" -I "F:\My               #
#                    Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\..\..\..\ #
#                    src\cpu\headers\" -I "F:\My                              #
#                    Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\..\..\..\ #
#                    src\drivers\uart\" -I "F:\My                             #
#                    Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\..\..\..\ #
#                    src\drivers\mcg\" -I "F:\My                              #
#                    Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\..\..\..\ #
#                    src\drivers\wdog\" -I "F:\My                             #
#                    Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\..\..\..\ #
#                    src\platforms\" -I "F:\My Works\K60\Kinetis512\kinetis-s #
#                    c\build\iar\gpio\..\" -Ol --use_c++_inline               #
#    List file    =  F:\My Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\FLA #
#                    SH_512KB_PFLASH\List\common.lst                          #
#    Object file  =  F:\My Works\K60\Kinetis512\kinetis-sc\build\iar\gpio\FLA #
#                    SH_512KB_PFLASH\Obj\common.o                             #
#                                                                             #
#                                                                             #
###############################################################################

F:\My Works\K60\K60课件\K60课件\源程序\Ch11-PRG(SDHC)\SDHC\Sources\MCUabout\common.c
      1          //============================================================================
      2          //文件名称：common.c
      3          //功能概要：通用函数
      4          //============================================================================
      5          
      6          
      7          #include "common.h"
      8          
      9          
     10          //============================================================================
     11          //函数名称：stop
     12          //函数返回：无
     13          //参数说明：无
     14          //功能概要：设置CPU为STOP模式
     15          //============================================================================

   \                                 In section .text, align 4, keep-with-next
     16          void stop (void)
     17          {
     18              //置位SLEEPDEEP使能STOP模式
     19              BSET(SCB_SCR_SLEEPDEEP_SHIFT, SCB_SCR);
   \                     stop:
   \   00000000   ....               LDR.N    R0,??DataTable5  ;; 0xe000ed10
   \   00000002   0068               LDR      R0,[R0, #+0]
   \   00000004   50F00400           ORRS     R0,R0,#0x4
   \   00000008   ....               LDR.N    R1,??DataTable5  ;; 0xe000ed10
   \   0000000A   0860               STR      R0,[R1, #+0]
     20              //进入STOP模式
     21              asm("WFI");
   \   0000000C   30BF               WFI              
     22          }
   \   0000000E   7047               BX       LR               ;; return
     23          
     24          //============================================================================
     25          //函数名称：wait
     26          //函数返回：无
     27          //参数说明：无
     28          //功能概要：设置CPU为WAIT模式
     29          //============================================================================

   \                                 In section .text, align 4, keep-with-next
     30          void wait (void)
     31          {
     32              //清SLEEPDEEP位来确定进入WAIT模式
     33              BCLR(SCB_SCR_SLEEPDEEP_SHIFT, SCB_SCR);
   \                     wait:
   \   00000000   ....               LDR.N    R0,??DataTable5  ;; 0xe000ed10
   \   00000002   0068               LDR      R0,[R0, #+0]
   \   00000004   30F00400           BICS     R0,R0,#0x4
   \   00000008   ....               LDR.N    R1,??DataTable5  ;; 0xe000ed10
   \   0000000A   0860               STR      R0,[R1, #+0]
     34              //进入WAIT模式
     35              asm("WFI");
   \   0000000C   30BF               WFI              
     36          }
   \   0000000E   7047               BX       LR               ;; return
     37          
     38          //============================================================================
     39          //函数名称：write_vtor
     40          //函数返回：vtor：要更改的值
     41          //参数说明：无
     42          //功能概要：更改中断向量表偏移寄存器的值 
     43          //============================================================================

   \                                 In section .text, align 2, keep-with-next
     44          void write_vtor (uint16 vtor)
     45          {
     46              //写新值
     47              SCB_VTOR = vtor;	
   \                     write_vtor:
   \   00000000   ....               LDR.N    R1,??DataTable5_1  ;; 0xe000ed08
   \   00000002   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000004   0860               STR      R0,[R1, #+0]
     48          }
   \   00000006   7047               BX       LR               ;; return
     49          
     50          //============================================================================
     51          //函数名称：enable_irq
     52          //函数返回：无  
     53          //参数说明：irq：irq号
     54          //功能概要：使能irq中断 
     55          //============================================================================

   \                                 In section .text, align 2, keep-with-next
     56          void enable_irq (uint16 irq)
     57          {
     58              uint16 div;
     59          
     60              //确定irq号为有效的irq号
     61              if (irq > 91)	irq=91;
   \                     enable_irq:
   \   00000000   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000002   5C28               CMP      R0,#+92
   \   00000004   00D3               BCC.N    ??enable_irq_0
   \   00000006   5B20               MOVS     R0,#+91
     62              
     63              //确定对应的NVICISER
     64              div = irq/32;
   \                     ??enable_irq_0:
   \   00000008   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000000A   2021               MOVS     R1,#+32
   \   0000000C   90FBF1F1           SDIV     R1,R0,R1
     65          
     66              switch (div)
   \   00000010   89B2               UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000012   0029               CMP      R1,#+0
   \   00000014   03D0               BEQ.N    ??enable_irq_1
   \   00000016   0229               CMP      R1,#+2
   \   00000018   2DD0               BEQ.N    ??enable_irq_2
   \   0000001A   16D3               BCC.N    ??enable_irq_3
   \   0000001C   41E0               B.N      ??enable_irq_4
     67              {
     68              	case 0x0:
     69                      NVICICPR0 = 1 << (irq%32);
   \                     ??enable_irq_1:
   \   0000001E   0121               MOVS     R1,#+1
   \   00000020   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000022   2022               MOVS     R2,#+32
   \   00000024   90FBF2F3           SDIV     R3,R0,R2
   \   00000028   03FB1203           MLS      R3,R3,R2,R0
   \   0000002C   9940               LSLS     R1,R1,R3
   \   0000002E   ....               LDR.N    R2,??DataTable5_2  ;; 0xe000e280
   \   00000030   1160               STR      R1,[R2, #+0]
     70                      NVICISER0 = 1 << (irq%32);
   \   00000032   0121               MOVS     R1,#+1
   \   00000034   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000036   2022               MOVS     R2,#+32
   \   00000038   90FBF2F3           SDIV     R3,R0,R2
   \   0000003C   03FB1203           MLS      R3,R3,R2,R0
   \   00000040   11FA03F0           LSLS     R0,R1,R3
   \   00000044   ....               LDR.N    R1,??DataTable5_3  ;; 0xe000e100
   \   00000046   0860               STR      R0,[R1, #+0]
     71                      break;
   \   00000048   2BE0               B.N      ??enable_irq_5
     72              	case 0x1:
     73                      NVICICPR1 = 1 << (irq%32);
   \                     ??enable_irq_3:
   \   0000004A   0121               MOVS     R1,#+1
   \   0000004C   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000004E   2022               MOVS     R2,#+32
   \   00000050   90FBF2F3           SDIV     R3,R0,R2
   \   00000054   03FB1203           MLS      R3,R3,R2,R0
   \   00000058   9940               LSLS     R1,R1,R3
   \   0000005A   ....               LDR.N    R2,??DataTable5_4  ;; 0xe000e284
   \   0000005C   1160               STR      R1,[R2, #+0]
     74                      NVICISER1 = 1 << (irq%32);
   \   0000005E   0121               MOVS     R1,#+1
   \   00000060   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000062   2022               MOVS     R2,#+32
   \   00000064   90FBF2F3           SDIV     R3,R0,R2
   \   00000068   03FB1203           MLS      R3,R3,R2,R0
   \   0000006C   11FA03F0           LSLS     R0,R1,R3
   \   00000070   ....               LDR.N    R1,??DataTable5_5  ;; 0xe000e104
   \   00000072   0860               STR      R0,[R1, #+0]
     75                      break;
   \   00000074   15E0               B.N      ??enable_irq_5
     76              	case 0x2:
     77                      NVICICPR2 = 1 << (irq%32);
   \                     ??enable_irq_2:
   \   00000076   0121               MOVS     R1,#+1
   \   00000078   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000007A   2022               MOVS     R2,#+32
   \   0000007C   90FBF2F3           SDIV     R3,R0,R2
   \   00000080   03FB1203           MLS      R3,R3,R2,R0
   \   00000084   9940               LSLS     R1,R1,R3
   \   00000086   ....               LDR.N    R2,??DataTable5_6  ;; 0xe000e288
   \   00000088   1160               STR      R1,[R2, #+0]
     78                      NVICISER2 = 1 << (irq%32);
   \   0000008A   0121               MOVS     R1,#+1
   \   0000008C   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000008E   2022               MOVS     R2,#+32
   \   00000090   90FBF2F3           SDIV     R3,R0,R2
   \   00000094   03FB1203           MLS      R3,R3,R2,R0
   \   00000098   11FA03F0           LSLS     R0,R1,R3
   \   0000009C   ....               LDR.N    R1,??DataTable5_7  ;; 0xe000e108
   \   0000009E   0860               STR      R0,[R1, #+0]
     79                      break;
   \   000000A0   FFE7               B.N      ??enable_irq_5
     80              	default:
     81              		break;
     82              }              
     83          }
   \                     ??enable_irq_4:
   \                     ??enable_irq_5:
   \   000000A2   7047               BX       LR               ;; return
     84          
     85          //============================================================================
     86          //函数名称：disable_irq
     87          //函数返回：无      
     88          //参数说明：irq：irq号
     89          //功能概要：禁止irq中断 
     90          //============================================================================

   \                                 In section .text, align 2, keep-with-next
     91          void disable_irq (uint16 irq)
     92          {
     93              uint16 div;
     94          
     95              //确定irq号为有效的irq号
     96              if (irq > 91)	irq=91;
   \                     disable_irq:
   \   00000000   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000002   5C28               CMP      R0,#+92
   \   00000004   00D3               BCC.N    ??disable_irq_0
   \   00000006   5B20               MOVS     R0,#+91
     97              
     98              //确定对应的NVICISER
     99              div = irq/32;
   \                     ??disable_irq_0:
   \   00000008   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000000A   2021               MOVS     R1,#+32
   \   0000000C   90FBF1F1           SDIV     R1,R0,R1
    100          
    101              switch (div)
   \   00000010   89B2               UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000012   0029               CMP      R1,#+0
   \   00000014   03D0               BEQ.N    ??disable_irq_1
   \   00000016   0229               CMP      R1,#+2
   \   00000018   19D0               BEQ.N    ??disable_irq_2
   \   0000001A   0CD3               BCC.N    ??disable_irq_3
   \   0000001C   23E0               B.N      ??disable_irq_4
    102              {
    103                  case 0:
    104                      NVICICER0 = 1 << (irq%32);
   \                     ??disable_irq_1:
   \   0000001E   0121               MOVS     R1,#+1
   \   00000020   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000022   2022               MOVS     R2,#+32
   \   00000024   90FBF2F3           SDIV     R3,R0,R2
   \   00000028   03FB1203           MLS      R3,R3,R2,R0
   \   0000002C   11FA03F0           LSLS     R0,R1,R3
   \   00000030   ....               LDR.N    R1,??DataTable5_8  ;; 0xe000e180
   \   00000032   0860               STR      R0,[R1, #+0]
    105                      break;
   \   00000034   17E0               B.N      ??disable_irq_5
    106              	case 1:
    107                      NVICICER1 = 1 << (irq%32);
   \                     ??disable_irq_3:
   \   00000036   0121               MOVS     R1,#+1
   \   00000038   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000003A   2022               MOVS     R2,#+32
   \   0000003C   90FBF2F3           SDIV     R3,R0,R2
   \   00000040   03FB1203           MLS      R3,R3,R2,R0
   \   00000044   11FA03F0           LSLS     R0,R1,R3
   \   00000048   ....               LDR.N    R1,??DataTable5_9  ;; 0xe000e184
   \   0000004A   0860               STR      R0,[R1, #+0]
    108                      break;
   \   0000004C   0BE0               B.N      ??disable_irq_5
    109              	case 2:
    110                      NVICICER2 = 1 << (irq%32);
   \                     ??disable_irq_2:
   \   0000004E   0121               MOVS     R1,#+1
   \   00000050   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000052   2022               MOVS     R2,#+32
   \   00000054   90FBF2F3           SDIV     R3,R0,R2
   \   00000058   03FB1203           MLS      R3,R3,R2,R0
   \   0000005C   11FA03F0           LSLS     R0,R1,R3
   \   00000060   ....               LDR.N    R1,??DataTable5_10  ;; 0xe000e188
   \   00000062   0860               STR      R0,[R1, #+0]
    111                      break;
   \   00000064   FFE7               B.N      ??disable_irq_5
    112              	default:
    113              		break;
    114              }              
    115          }
   \                     ??disable_irq_4:
   \                     ??disable_irq_5:
   \   00000066   7047               BX       LR               ;; return
    116           
    117          //============================================================================
    118          //函数名称：set_irq_priority
    119          //函数返回：无      
    120          //参数说明：irq：irq号         											   
    121          //         prio：优先级
    122          //功能概要：设置irq中断和优先级 
    123          //============================================================================

   \                                 In section .text, align 2, keep-with-next
    124          void set_irq_priority (uint16 irq, uint16 prio)
    125          {
    126              uint8 *prio_reg;
    127          
    128              //确定irq号和优先级有效
    129              if (irq > 91)	irq = 91;
   \                     set_irq_priority:
   \   00000000   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000002   5C28               CMP      R0,#+92
   \   00000004   00D3               BCC.N    ??set_irq_priority_0
   \   00000006   5B20               MOVS     R0,#+91
    130              if (prio > 15)	prio = 15;
   \                     ??set_irq_priority_0:
   \   00000008   89B2               UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000000A   1029               CMP      R1,#+16
   \   0000000C   00D3               BCC.N    ??set_irq_priority_1
   \   0000000E   0F21               MOVS     R1,#+15
    131          
    132              //确定对应的NVICISER
    133              prio_reg = (uint8 *)(((uint32)&NVICIP0) + irq);
   \                     ??set_irq_priority_1:
   \   00000010   ....               LDR.N    R2,??DataTable5_11  ;; 0xe000e400
   \   00000012   12FA80F0           UXTAH    R0,R2,R0
    134              //设置优先级
    135              *prio_reg = ( (prio&0xF) << (8 - ARM_INTERRUPT_LEVEL_BITS) );             
   \   00000016   0901               LSLS     R1,R1,#+4
   \   00000018   0170               STRB     R1,[R0, #+0]
    136          }
   \   0000001A   7047               BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   10ED00E0           DC32     0xe000ed10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   08ED00E0           DC32     0xe000ed08

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   80E200E0           DC32     0xe000e280

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   00E100E0           DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   84E200E0           DC32     0xe000e284

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   04E100E0           DC32     0xe000e104

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   88E200E0           DC32     0xe000e288

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   08E100E0           DC32     0xe000e108

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   80E100E0           DC32     0xe000e180

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   84E100E0           DC32     0xe000e184

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   88E100E0           DC32     0xe000e188

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   00E400E0           DC32     0xe000e400
    137          

   Maximum stack usage in bytes:

     Function         .cstack
     --------         -------
     disable_irq           0
     enable_irq            0
     set_irq_priority      0
     stop                  0
     wait                  0
     write_vtor            0


   Section sizes:

     Function/Label   Bytes
     --------------   -----
     stop               16
     wait               16
     write_vtor          8
     enable_irq        164
     disable_irq       104
     set_irq_priority   28
     ??DataTable5        4
     ??DataTable5_1      4
     ??DataTable5_2      4
     ??DataTable5_3      4
     ??DataTable5_4      4
     ??DataTable5_5      4
     ??DataTable5_6      4
     ??DataTable5_7      4
     ??DataTable5_8      4
     ??DataTable5_9      4
     ??DataTable5_10     4
     ??DataTable5_11     4

 
 384 bytes in section .text
 
 384 bytes of CODE memory

Errors: none
Warnings: 3
