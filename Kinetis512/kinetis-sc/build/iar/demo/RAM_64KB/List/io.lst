###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.1.52143/W32 for ARM     23/Jan/2012  15:55:52 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  G:\K60\Kinetis512\kinetis-sc\src\common\io.c             #
#    Command line =  G:\K60\Kinetis512\kinetis-sc\src\common\io.c -D IAR -D   #
#                    TWR_K60N512 -lCN G:\K60\Kinetis512\kinetis-sc\build\iar\ #
#                    demo\RAM_64KB\List\ -lB G:\K60\Kinetis512\kinetis-sc\bui #
#                    ld\iar\demo\RAM_64KB\List\ -o                            #
#                    G:\K60\Kinetis512\kinetis-sc\build\iar\demo\RAM_64KB\Obj #
#                    \ --no_cse --no_unroll --no_inline --no_code_motion      #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=None            #
#                    --dlib_config "D:\Program Files\IAR Systems\Embedded     #
#                    Workbench 6.0\arm\INC\c\DLib_Config_Normal.h" -I         #
#                    G:\K60\Kinetis512\kinetis-sc\build\iar\demo\..\..\..\src #
#                    \projects\demo\ -I G:\K60\Kinetis512\kinetis-sc\build\ia #
#                    r\demo\..\..\..\src\common\ -I                           #
#                    G:\K60\Kinetis512\kinetis-sc\build\iar\demo\..\..\..\src #
#                    \cpu\ -I G:\K60\Kinetis512\kinetis-sc\build\iar\demo\..\ #
#                    ..\..\src\cpu\headers\ -I G:\K60\Kinetis512\kinetis-sc\b #
#                    uild\iar\demo\..\..\..\src\drivers\uart\ -I              #
#                    G:\K60\Kinetis512\kinetis-sc\build\iar\demo\..\..\..\src #
#                    \drivers\mcg\ -I G:\K60\Kinetis512\kinetis-sc\build\iar\ #
#                    demo\..\..\..\src\drivers\wdog\ -I                       #
#                    G:\K60\Kinetis512\kinetis-sc\build\iar\demo\..\..\..\src #
#                    \platforms\ -I G:\K60\Kinetis512\kinetis-sc\build\iar\de #
#                    mo\..\ -Ol --use_c++_inline                              #
#    List file    =  G:\K60\Kinetis512\kinetis-sc\build\iar\demo\RAM_64KB\Lis #
#                    t\io.lst                                                 #
#    Object file  =  G:\K60\Kinetis512\kinetis-sc\build\iar\demo\RAM_64KB\Obj #
#                    \io.o                                                    #
#                                                                             #
#                                                                             #
###############################################################################

G:\K60\Kinetis512\kinetis-sc\src\common\io.c
      1          /*
      2           * File:		io.c
      3           * Purpose:		Serial Input/Output routines
      4           *
      5           * Notes:       TERMINAL_PORT defined in <board>.h
      6           */
      7          
      8          #include "common.h"
      9          #include "uart.h"
     10          
     11          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     12          char
     13          in_char (void)
     14          {
   \                     in_char:
   \   00000000   80B5               PUSH     {R7,LR}
     15          	return uart_getchar(TERM_PORT);
   \   00000002   ....               LDR.N    R0,??DataTable2  ;; 0x400eb000
   \   00000004   ........           BL       uart_getchar
   \   00000008   02BD               POP      {R1,PC}          ;; return
     16          }
     17          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     18          void
     19          out_char (char ch)
     20          {
   \                     out_char:
   \   00000000   80B5               PUSH     {R7,LR}
     21          	uart_putchar(TERM_PORT, ch);
   \   00000002   0100               MOVS     R1,R0
   \   00000004   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000006   ....               LDR.N    R0,??DataTable2  ;; 0x400eb000
   \   00000008   ........           BL       uart_putchar
     22          }
   \   0000000C   01BD               POP      {R0,PC}          ;; return
     23          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     24          int
     25          char_present (void)
     26          {
   \                     char_present:
   \   00000000   80B5               PUSH     {R7,LR}
     27          	return uart_getchar_present(TERM_PORT);
   \   00000002   ....               LDR.N    R0,??DataTable2  ;; 0x400eb000
   \   00000004   ........           BL       uart_getchar_present
   \   00000008   02BD               POP      {R1,PC}          ;; return
     28          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   00B00E40           DC32     0x400eb000
     29          /********************************************************************/

   Maximum stack usage in bytes:

     Function     .cstack
     --------     -------
     char_present      8
     in_char           8
     out_char          8


   Section sizes:

     Function/Label Bytes
     -------------- -----
     in_char          10
     out_char         14
     char_present     10
     ??DataTable2      4

 
 38 bytes in section .text
 
 38 bytes of CODE memory

Errors: none
Warnings: none
